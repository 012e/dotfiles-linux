set -g @yank_selection 'clipboard'
set -g @yank_selection_mouse 'clipboard'
set -g @yank_with_mouse on

# variables 
bg_color="#1E1E2E"
fg_color="#CDD6F4"

# status bar
set-option -g status-position top
set-option -g status-left "[tmux]"
# show prefix on press and full path
set-option -g status-right "#[fg=$fg_color,bg=$bg_color]#{?client_prefix,#[reverse]   Prefix   #[noreverse],}#[bg=default,fg=default] #[bg=bg_color,fg=$fg_color]#(echo #{pane_current_path} | sed 's#$HOME#~#g')"
setw -g window-status-format "#[bg=$default,fg=$fg_color] #I: #W #[bg=default,fg=default]"
setw -g window-status-current-format "#[bg=$fg_color,fg=$bg_color] #I: #W #[bg=default,fg=default]"
set-option -g history-limit 100000


# prefix key to F1
unbind C-b
set-option -g prefix F1
bind-key F1 send-prefix 

# misc 
set-window-option -g mode-keys vi
set -g mouse on
set -sg escape-time 0

# Auto close bar if there is no tmux windows
set-hook -g window-unlinked "if-shell '[ #{session_windows} != 1 ]' { set status on } { set status off }"
set-hook -g session-created "if-shell '[ #{session_windows} != 1 ]' { set status on } { set status off }"
set-hook -g window-linked   "set status on"

# Keyboard shortcuts {
bind-key n new-window -c '#{pane_current_path}'
bind-key r command-prompt -I "#W" "rename-window '%%'"
bind-key h previous-window
bind-key l next-window

# switch back and forth between windows
bind-key Tab last-window

# kill windows
bind-key q killw

# toggle terminal popup
bind-key -n 'C-\' if-shell "[[ #{session_name} != popup* ]]" {
   run-shell "popuptmux #{session_name} #{pane_current_path}"
} {
  detach
}

bind-key -n 'C-S-N' run-shell "sttmux"

bind-key ` select-window -t 0
# }

set -g allow-rename on
set-option -g automatic-rename on
set -g default-terminal "tmux-256color"
set-option -g set-titles on
set-option -g set-titles-string "#T"
set-option -g status-style bg=default
set -g window-style "bg=default"
set -g window-active-style "bg=default"


run-shell ~/.config/tmux/tmux-yank/yank.tmux
